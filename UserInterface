package pokedexSystem;

import java.awt.*;
import javax.swing.*;
import java.util.stream.IntStream;

public class UserInterface {
	private static POKEDEX PDex;

	public UserInterface(POKEDEX dex){
		PDex = dex;
		Frame();
	}
	
	// Erstellt ein String-Array mit Nummern von 1 bis 151
	private static String[] NumberList() {
		int intAry[] = IntStream.range(1,152).toArray();
        String[] strArray = new String[intAry.length];
        
        for (int i = 0; i < intAry.length; i++) {
            strArray[i] = String.valueOf(intAry[i]);
        }
        return strArray;
	}
	
	// Erstellt eine String-Array von allen Attributen. füllt die Daten jedes Pokemons ein, und gibt dieses aus
	private static String[] AttributeList(String a, Pokemon[] ary) {
		String NameList[] = new String[151];
		String HPList[] = new String[151];
		String ATKList[] = new String[151];
		String DEFList[] = new String[151];
		String SPATKList[] = new String[151];
		String SPDEFList[] = new String[151];
		String SPDList[] = new String[151];
		String TypeList[] = new String[151];
		String Type2List[] = new String[151];
		
		switch(a) {
		case "Name":
			for(int i = 0; i < 151; i++) {
				NameList[i] = ary[i].giveName();
			}
			return NameList;
		case "HP":
			for(int i = 0; i < 151; i++) {
				HPList[i] = Integer.toString(ary[i].giveStat(0));
			}
			return HPList;
		case "ATK":
			for(int i = 0; i < 151; i++) {
				ATKList[i] = Integer.toString(ary[i].giveStat(1));
			}
			return ATKList;
		case "DEF":
			for(int i = 0; i < 151; i++) {
				DEFList[i] = Integer.toString(ary[i].giveStat(2));
			}
			return DEFList;
		case "SP-ATK":
			for(int i = 0; i < 151; i++) {
				SPATKList[i] = Integer.toString(ary[i].giveStat(3));
			}
			return SPATKList;
		case "SP-DEF":
			for(int i = 0; i < 151; i++) {
				SPDEFList[i] = Integer.toString(ary[i].giveStat(4));
			}
			return SPDEFList;
		case "SPD":
			for(int i = 0; i < 151; i++) {
				SPDList[i] = Integer.toString(ary[i].giveStat(5));
			}
			return SPDList;
		case "TYPE":
			for(int i = 0; i < 151; i++) {
				TypeList[i] = ary[i].giveTypeName(ary[i].giveType1());
			}
			return TypeList;
		case "TYPE2":
			for(int i = 0; i < 151; i++) {
				if(ary[i].hasTwoTypes()) {
					Type2List[i] = ary[i].giveTypeName(ary[i].giveType2());
				}
				else {
					Type2List[i] = " ";
				}
			}
			return Type2List;
		default:
			return null;
		}
	}
//	Erstellt die Programmgrafik
	private static void Frame() {
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		double width = screenSize.getWidth();
		double height = screenSize.getHeight();
		
//		Fenster wird erstellt
		JFrame frame = new JFrame("Pokédex");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize((int) Math.round(457),(int) Math.round(740));
		frame.setResizable(false);
		
//		Display-felder werden erstellt
		JPanel panel = new JPanel();
		JPanel leftpanel = new JPanel();
		JPanel listpanel = new JPanel();
		JPanel listpanel1 = new JPanel();
		JPanel listpanel2 = new JPanel();
		JPanel listpanel3 = new JPanel();
		JPanel listpanel4 = new JPanel();
		JScrollPane scroll = new JScrollPane(listpanel);
		
//		Knöpfe werden erstellt
		JButton search = new JButton("OK");
		JButton sort = new JButton("Sort");

//		Sortierparameter-Auswahlbox wird erstellt
		String[] ParaList = {"----", "Name", "HP", "ATK", "DEF", "SP-ATK", "SP-DEF", "SPD"};
		JComboBox parameters = new JComboBox(ParaList);
		
		
//		Listen von Attributen werden erstellt
		JList pokelist = new JList(NumberList());
		
		JList namelist = new JList(AttributeList("Name", PDex.PokeArray()));
		JList hplist = new JList(AttributeList("HP", PDex.PokeArray()));
		JList atklist = new JList(AttributeList("ATK", PDex.PokeArray()));
		JList deflist = new JList(AttributeList("DEF", PDex.PokeArray()));
		JList satklist = new JList(AttributeList("SP-ATK", PDex.PokeArray()));
		JList sdeflist = new JList(AttributeList("SP-DEF", PDex.PokeArray()));
		JList spdlist = new JList(AttributeList("SPD", PDex.PokeArray()));
		JList typelist = new JList(AttributeList("TYPE", PDex.PokeArray()));
		JList type2list = new JList(AttributeList("TYPE2", PDex.PokeArray()));
		
//		Suchleiste wird erstellt
		JTextField searchbar = new JTextField(null, (int) Math.round(((0.26*width)-335)/11));
		frame.setVisible(true);
		
//		Display-felder werden gefüllt
		// Obere Leiste
		leftpanel.add(BorderLayout.WEST, parameters);
		leftpanel.add(BorderLayout.EAST, sort);
		panel.add(BorderLayout.LINE_START, leftpanel);
		panel.add(BorderLayout.CENTER, searchbar);
		panel.add(BorderLayout.LINE_END, search);
		// Pokemon Liste
		listpanel.add(BorderLayout.LINE_START, pokelist);
		listpanel.add(BorderLayout.CENTER, listpanel1);
		listpanel.add(BorderLayout.EAST, listpanel2);
		listpanel1.add(BorderLayout.WEST, namelist);
		listpanel1.add(BorderLayout.CENTER, hplist);
		listpanel1.add(BorderLayout.EAST, atklist);
		listpanel2.add(BorderLayout.WEST, deflist);
		listpanel2.add(BorderLayout.CENTER, satklist);
		listpanel2.add(BorderLayout.EAST, listpanel3);
		listpanel3.add(BorderLayout.WEST, sdeflist);
		listpanel3.add(BorderLayout.CENTER, listpanel4);
		listpanel4.add(BorderLayout.WEST, spdlist);
		listpanel4.add(BorderLayout.CENTER, typelist);
		listpanel4.add(BorderLayout.EAST, type2list);		
		
//		Display-felder werden ins Fenster eingefügt
		frame.add(BorderLayout.PAGE_START, panel);
		frame.add(BorderLayout.CENTER, scroll);
		
	}
}
