package pokedexSystem;

public class POKEDEX {			//stellt den Graph dar, welcher die Typen relationen darstellt, also stark/schwach
	private Sorter sort;
	private NODE first;
	private int count;
	private String [] Type = {"Normal", "Fire", "Water", "Grass", "Electric", "Ice", "Fighting", "Poison", "Ground", "Flying", "Psychic", "Bug", "Rock", "Ghost", "Dragon", "Dark", "Steel", "Fairy"};
	private int [] [] TypeChart = {{2,2,2,2,2,2,2,2,2,2,2,2,1,0,2,2,1,2},  //Normal
			{2,1,1,2,4,4,2,2,2,2,2,4,1,2,1,2,4,2},  //Fire
			{2,4,1,2,1,2,2,2,4,2,2,2,4,2,1,2,2,2},  //Water
			{2,2,4,1,1,2,2,2,0,4,2,2,2,2,1,2,2,2},  //Electric
			{2,1,4,2,1,2,2,1,4,1,2,1,4,2,1,2,1,2},  //Grass
			{2,1,1,2,4,1,2,2,4,4,2,2,2,2,4,2,1,2},  //Ice
			{4,2,2,2,2,4,2,1,2,1,1,1,4,0,2,1,4,2},  //Fight
			{2,2,2,2,4,2,2,1,1,2,2,2,1,1,2,2,0,4},  //Poison
			{2,1,2,2,4,2,1,1,2,1,4,2,2,1,2,4,1,1},  //Ground
			{2,2,2,1,4,2,4,2,2,2,2,4,1,2,2,2,1,2},  //Flying
			{2,2,2,2,2,2,4,4,2,2,1,2,2,2,2,0,1,2},  //Psychic
			{2,1,2,2,4,2,1,1,2,1,4,2,2,1,2,4,1,1},  //Bug
			{2,4,2,2,2,4,1,2,1,4,2,4,2,2,2,2,1,2},  //Rock
			{0,2,2,2,2,2,2,2,2,2,4,2,2,4,2,1,2,2},  //Ghost
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,1,0},  //Dragon
			{2,1,1,1,2,4,2,2,2,2,2,2,4,2,2,2,1,4},  //Steel
			{2,1,2,2,2,2,4,1,2,2,2,2,2,2,4,4,1,2}}; //Fairy

	public double compare (int t1,int t2,int tattack) {			//für das Vergleichen von 2 Statuswerten
		if (t1 == t2) {
			return (TypeChart[tattack][t1]/2);
		}
		else {
		return (TypeChart[tattack][t1]*TypeChart[tattack][t2]/2);
		}
	}


	public POKEDEX(NODE n){		//Erzeugt die Erste Node
		first = n;
		count = 1;
		sort = new Sorter();
	}

	public void AddPokemon (int i, String n, int hp, int a, int d, int sa, int sd, int s, int t1, int t2, boolean st) { 	//fügt ein neues Pokemon in die Liste hinzu
		first.AddPokemon (i, n, hp, a, d, sa, sd, s, t1, t2, st);
		count++;
	}


	public String giveTypeName(int t){	//gibt den Typennamen aus
		return Type[t];
	}

	public int countPok (){			//zählt die Pokemon
		return count;
	}

	public Pokemon findPokemon(int id){	//Sucht nach einem Pokemon
		return first.findPoke(id);
	}

	public int [] [] getTypeChart() {	//besorgt den Typen
		return TypeChart;
	}

	public Sorter getSort() {		//gibt das sortierte aus
		return sort;
	}
	
	public Pokemon[] PokeArray() {			//Erstellt das Array aus den 151 Pokemon
		Pokemon[] PkAry = new Pokemon[151];
		PkAry[0] = first.ArrayFill(0, PkAry);
		return PkAry;
	}
	
	public void printAll() {			//gibt alles aus
		first.printAll();
	}
	
}
